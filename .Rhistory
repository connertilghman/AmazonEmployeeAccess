library(tidyverse)
library(tidymodels)
library(vroom)
library(patchwork)
library(dplyr)
library(glmnet)
sample <- vroom("sampleSubmission.csv")
sample <- vroom("sampleSubmission.csv")
test <- vroom("test.csv")
train <- vroom("train.csv")
View(train)
summary(train)
ggplot(train, aes(factor(ACTION))) +
geom_bar(fill = "steelblue") +
labs(title = "Access Decision Distribution", x = "ACTION", y = "Count")
ggplot(train, aes(factor(ROLE_FAMILY_DESC))) +
geom_bar() +
coord_flip() +
labs(title = "Distribution of Role Families")
ggplot(train, aes(factor(ROLE_FAMILY_DESC))) +
geom_bar() +
labs(title = "Distribution of Role Families")
plot_intro(train)
plot_bar(train, ncol = 3)
ggplot(train, aes(factor(ROLE_CODE), fill = factor(ACTION))) +
geom_bar(position = "fill") +
coord_flip() +
labs(title = "Approval Rates by Role Code", y = "Proportion")
library(dplyr)
install.packages("DataExplorer")
create_report(train)
library(tidyverse)
library(tidymodels)
library(vroom)
library(patchwork)
library(dplyr)
library(DataExplorer)
library(glmnet)
create_report(train)
my_recipe <- recipe(ACTION ~ ., data = train) |>
step_mutate_at(all_nominal_predictors(), fn = factor) |>
step_other(all_nominal_predictors(), threshold = 0.001) |>
step_dummy(all_nominal_predictors())
prep_rec <- prep(my_recipe)
baked_data <- bake(prep_rec, new_data = train)
View(baked_data)
library(tidyverse)
library(tidymodels)
library(vroom)
library(patchwork)
library(dplyr)
library(DataExplorer)
library(glmnet)
sample <- vroom("sampleSubmission.csv")
test <- vroom("test.csv")
train <- vroom("train.csv")
my_recipe <- recipe(ACTION ~ ., data = train) |>
step_mutate_at(all_nominal_predictors(), fn = factor) |>
step_other(all_nominal_predictors(), threshold = 0.001) |>
step_dummy(all_nominal_predictors())
prep_rec <- prep(my_recipe)
baked_data <- bake(prep_rec, new_data = train)
baked_data <- bake(prep_rec, new_data = test)
baked_data <- bake(prep_rec, new_data = train)
library(tidyverse)
library(tidymodels)
library(vroom)
library(patchwork)
library(dplyr)
library(DataExplorer)
library(glmnet)
sample <- vroom("sampleSubmission.csv")
test <- vroom("test.csv")
train <- vroom("train.csv")
my_recipe <- recipe(ACTION ~ ., data = train) |>
step_mutate_at(all_nominal_predictors(), fn = factor) |>
step_other(all_nominal_predictors(), threshold = 0.001) |>
step_dummy(all_nominal_predictors())
prep_rec <- prep(my_recipe)
baked_data <- bake(prep_rec, new_data = train)
View(baked_data)
cat(ncol(baked_data))
View(train)
library(tidyverse)
library(tidymodels)
library(vroom)
library(patchwork)
library(dplyr)
library(DataExplorer)
library(glmnet)
sample <- vroom("sampleSubmission.csv")
test <- vroom("test.csv")
View(test)
train <- vroom("train.csv")
my_recipe <- recipe(ACTION ~ ., data = train) |>
step_mutate_at(all_nominal_predictors(), fn = factor) |>
step_other(all_nominal_predictors(), threshold = 0.001) |>
step_dummy(all_nominal_predictors())
prep_rec <- prep(my_recipe)
baked_data <- bake(prep_rec, new_data = train)
my_recipe <- recipe(ACTION ~ ., data = train) |>
step_mutate_at(all_numeric_predictors(), fn = factor) |>
step_other(all_nominal_predictors(), threshold = 0.001) |>
step_dummy(all_nominal_predictors())
prep_rec <- prep(my_recipe)
baked_data <- bake(prep_rec, new_data = train)
baked_data <- bake(prep_rec, new_data = train)
cat(ncol(baked_data))
library(tidyverse)
library(tidymodels)
library(vroom)
library(patchwork)
library(dplyr)
library(DataExplorer)
library(glmnet)
sample <- vroom("sampleSubmission.csv")
test <- vroom("test.csv")
train <- vroom("train.csv")
my_recipe <- recipe(ACTION ~ ., data = train) |>
step_mutate_at(all_numeric_predictors(), fn = factor) |>
step_other(all_nominal_predictors(), threshold = 0.001) |>
step_dummy(all_nominal_predictors())
prep_rec <- prep(my_recipe)
baked_data <- bake(prep_rec, new_data = train)
logRegModel <- logistic_reg() |>
set_engine("glm")
logReg_workflow <- workflow() |>
add_model(logRegModel) |>
add_recipe(my_recipe)
amazon_predictions <- predict(logReg_workflow,
new_data=test,
type="prob")
logReg_fit <- fit(logReg_workflow, data = train)
my_recipe <- recipe(ACTION ~ ., data = train) |>
step_mutate(across(all_numeric_predictors(), as.factor)) |>
step_other(all_nominal_predictors(), threshold = 0.001) |>
step_dummy(all_nominal_predictors())
prep_rec <- prep(my_recipe)
baked_data <- bake(prep_rec, new_data = train)
baked_data <- bake(prep_rec, new_data = train)
logRegModel <- logistic_reg() |>
set_engine("glm")
logReg_workflow <- workflow() |>
add_model(logRegModel) |>
add_recipe(my_recipe)
logReg_fit <- fit(logReg_workflow, data = train)
my_recipe <- recipe(ACTION ~ ., data = train) |>
step_mutate(across(all_numeric_predictors(), as.factor)) |>
step_other(all_nominal_predictors(), threshold = 0.001) |>
step_dummy(all_nominal_predictors())
prep_rec <- prep(my_recipe)
baked_data <- bake(prep_rec, new_data = train)
my_recipe <- recipe(ACTION ~ ., data = train) |>
step_mutate_at(all_numeric_predictors(), fn = factor) |>
step_other(all_nominal_predictors(), threshold = 0.001) |>
step_dummy(all_nominal_predictors())
prep_rec <- prep(my_recipe)
baked_data <- bake(prep_rec, new_data = train)
logRegModel <- logistic_reg() |>
set_engine("glm")
logReg_workflow <- workflow() |>
add_model(logRegModel) |>
add_recipe(my_recipe)
logReg_fit <- fit(logReg_workflow, data = train)
train <- train |>
mutate(ACTION = as.factor(ACTION))
my_recipe <- recipe(ACTION ~ ., data = train) |>
step_mutate_at(all_numeric_predictors(), fn = factor) |>
step_other(all_nominal_predictors(), threshold = 0.001) |>
step_dummy(all_nominal_predictors())
prep_rec <- prep(my_recipe)
baked_data <- bake(prep_rec, new_data = train)
logRegModel <- logistic_reg() |>
set_engine("glm")
logReg_workflow <- workflow() |>
add_model(logRegModel) |>
add_recipe(my_recipe)
logReg_fit <- fit(logReg_workflow, data = train)
amazon_predictions <- predict(logReg_fit,
new_data=test,
type="prob")
View(amazon_predictions)
View(sample)
View(test)
View(sample)
kaggle_submission <- test|>
bind_cols(tuning_preds)|>
select(id, .pred_1) |>
rename(Action=.pred_1) |>
rename(Id=id)
kaggle_submission <- test|>
bind_cols(amazon_predictions)|>
select(id, .pred_1) |>
rename(Action=.pred_1) |>
rename(Id=id)
vroom_write(x=kaggle_submission, file="./AmazonPreds.csv", delim=",")
